version: "2.2"

services:
#  store_bot:
#    container_name: store_bot
#    image: akafer/sms_bot
#    restart: on-failure
#    command: >
#      bash -c ". venv/bin/activate
#      && python3 my_store/store_bot.py"
#    env_file:
#      - .env
#    depends_on:
#      db:
#        condition: service_healthy

  sms_bot:
    container_name: sms_bot
    image: akafer/sms_bot
    restart: on-failure
    command: >
      bash -c ". venv/bin/activate
      && python3 my_store/sms_bot.py
      "
    volumes:
      - ./reports:/tmp
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: bot_db
    image: postgres:14-bullseye
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 3s
      retries: 3

  redis:
    container_name: bot_redis
    image: redis:latest
    restart: on-failure

volumes:
  postgres_data: